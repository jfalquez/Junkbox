CMAKE_MINIMUM_REQUIRED( VERSION 2.8 )

PROJECT( DTrack )


LIST( APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/CMakeModules/" )


FIND_PACKAGE( RPG REQUIRED )
FIND_PACKAGE( Pangolin REQUIRED )
FIND_PACKAGE( SceneGraph REQUIRED )
FIND_PACKAGE( CVARS REQUIRED )
FIND_PACKAGE( Kangaroo REQUIRED )
FIND_PACKAGE( Sophus REQUIRED )
FIND_PACKAGE( CeresSolver REQUIRED )
#FIND_PACKAGE( SensorFusion REQUIRED )


INCLUDE_DIRECTORIES( ${CMAKE_SOURCE_DIR} )
INCLUDE_DIRECTORIES( ${RPG_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${Pangolin_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${SceneGraph_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${CVARS_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${Kangaroo_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${Sophus_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${CeresSolver_INCLUDE_DIRS} )
#INCLUDE_DIRECTORIES( ${SENSORFUSION_INCLUDE_DIRS} )


LINK_DIRECTORIES( ${Pangolin_LIBRARY_DIRS} )
LINK_DIRECTORIES( ${Sophus_LIBRARY_DIRS} )
LINK_DIRECTORIES( ${CeresSolver_LIBRARY_DIRS} )


# Overide with cmake -DCMAKE_BUILD_TYPE=Debug {dir}
IF( NOT CMAKE_BUILD_TYPE )
   MESSAGE("Build type not set (defaults to release)")
   MESSAGE("-DCMAKE_BUILD_TYPE=Debug for debug")
   SET( CMAKE_BUILD_TYPE Release )
ENDIF()


IF(CMAKE_COMPILER_IS_GNUCXX)
 SET(CMAKE_CXX_FLAGS "-std=c++11 -g")
ENDIF()


ADD_SUBDIRECTORY( DenseMap )
ADD_SUBDIRECTORY( DenseFrontEnd )
ADD_SUBDIRECTORY( DenseBackEnd )
ADD_SUBDIRECTORY( Applications )
